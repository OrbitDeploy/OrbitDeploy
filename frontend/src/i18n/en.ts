import type { Dictionary } from './zh'

export const dict: Dictionary = {
  // Common
  common: {
    save: "Save",
    cancel: "Cancel",
    edit: "Edit",
    delete: "Delete",
    add: "Add",
    loading: "Loading...",
    confirm: "Confirm",
    yes: "Yes",
    no: "No",
    error: "Error",
    close: "Close",
  },

  // Navigation
  nav: {
    admin_title: "Admin Panel",
    system_title: "Management System",
    dashboard: "Dashboard",
    deployment: "Deployment Management", 
    examples: "Examples Management",
    system_monitor: "System Monitor",
    ssh_management: "SSH Management",
    profile: "Profile",
    settings: "Settings",
    change_password: "Change Password",
    system_settings: "System Settings",
    logout: "Logout",
    projects: "Projects",
    database_management: "Database Management",
    provider_auths: "Authorization Management",
  },

  // Login Page
  login: {
    title: "Admin Login",
    username: "Username",
    password: "Password",
    username_placeholder: "Enter username",
    password_placeholder: "Enter password",
    login_button: "Login",
    logging_in: "Logging in...",
    empty_fields_error: "Username and password cannot be empty",
    invalid_credentials: "Invalid username or password",
    login_failed: "Login failed, please try again",
  },

  // Dashboard Page
  dashboard: {
    title: "Dashboard",
    welcome: "Welcome to the admin panel",
    manage_desc: "Manage system example data",
    stats: {
      total_containers: "Total Containers",
      total_containers_desc: "Deployed containers count",
      today_views: "Today's Views",
      today_views_desc: "Page views today",
      admin_users: "Admin Users",
      admin_users_desc: "Number of administrators",
      system_status: "System Status",
      system_status_value: "Normal",
      system_status_desc: "System running status",
      running_deployments: "Running Deployments",
      last_updated: "Last Updated",
      loading: "Loading",
    },
    quick_actions: {
      title: "Quick Actions",
      add_example: "Add Example",
      system_settings: "System Settings",
    },
    system_info: {
      title: "System Information",
      version: "Version",
      database: "Database",
      uptime: "Uptime",
    },
    system_monitor: {
      title: "System Monitor",
      memory: "Memory",
      cpu: "CPU",
      disk: "Disk",
      cores: "cores",
      system_info: "System Info",
      uptime: "Uptime",
      os: "OS",
      connected: "Connected",
      disconnected: "Disconnected",
    },
  },

  // Examples Page
  examples: {
    title: "Examples Management",
    add_new: "Add Example",
    name_placeholder: "Enter example name",
    empty_state: "No examples found. Please add your first example.",
    table: {
      id: "ID",
      name: "Name",
      created_at: "Created At",
      updated_at: "Updated At",
      actions: "Actions",
    },
    messages: {
      create_success: "Example created successfully",
      update_success: "Example updated successfully",
      delete_success: "Example deleted successfully",
      create_failed: "Failed to create example",
      update_failed: "Failed to update example",
      delete_failed: "Failed to delete example",
      fetch_failed: "Failed to fetch examples",
      confirm_delete: "Are you sure you want to delete this example?",
    },
  },

  // Language
  language: {
    chinese: "中文",
    english: "English",
    switch_language: "Switch Language",
  },

  // Container Management Page
  containers: {
    title: "Container Management",
    description: "Manage your container configurations and operations",
    add_new: "Add New Container",
    count: "Containers",
    empty_state: "No containers found. Create your first container to get started.",
    table: {
      id: "ID",
      name: "Name",
      description: "Description",
      domains: "Domains",
      status: "Status",
      created: "Created",
      actions: "Actions",
    },
    form: {
      name: "Name",
      name_required: "Name *",
      name_placeholder: "Container name",
      name_validation: "Container name can only contain letters",
      description: "Description",
      description_placeholder: "Container description",
      quadlet_file: "Quadlet File",
      quadlet_placeholder: "Quadlet file content (.container file)",
      quadlet_hint: "Example: [Unit] Description=My Container [Container] Image=nginx:latest PublishPort=8080:80",
      env_file: "Environment File",
      env_placeholder: "Environment file content (.env file)",
      env_hint: "Example: VARIABLE_NAME=value\nPORT=8080\nDEBUG=true",
      env_path_hint: "Tip: You can specify environment file paths, and the system will auto-populate the content"
    },
    actions: {
      create: "Create Container",
      creating: "Creating...",
      update: "Update Container",
      updating: "Updating...",
      edit: "Edit",
      delete: "Delete",
      cancel: "Cancel",
      deploy: "Deploy",
      deploying: "Deploying...",
      start: "Start",
      starting: "Starting...",
      stop: "Stop",
      stopping: "Stopping...",
      restart: "Restart",
      restarting: "Restarting...",
      view_logs: "View Logs",
      domain_status: "Domain Status",
      close: "Close"
    },
    modals: {
      create_title: "Create New Container",
      edit_title: "Edit Container",
      logs_title: "Container Logs",
      no_logs: "No logs available"
    },
    messages: {
      name_required: "Container name is required",
      create_success: "Container created successfully",
      update_success: "Container updated successfully",
      delete_success: "Container deleted successfully",
      create_failed: "Failed to create container",
      update_failed: "Failed to update container",
      delete_failed: "Failed to delete container",
      operation_failed: "Operation failed",
      logs_failed: "Failed to get container logs",
      fetch_failed: "Failed to load containers",
      confirm_delete: "Are you sure you want to delete this container?",
      update_confirmation: "Container '{containerName}' is currently {status}. Updating will stop the container. Do you want to continue?"
    },
    status: {
      active: "Active",
      inactive: "Inactive",
      running: "Running",
      stopped: "Stopped",
      deployed: "Deployed",
      failed: "Failed",
      unknown: "Unknown"
    },
    environment_check: {
      title: "Deployment Environment Check",
      button: "Check Environment",
      checking: "Checking...",
      modal_title: "Deployment Environment Check Results",
      podman_status: "Podman Status",
      caddy_status: "Caddy Status",
      installed: "Installed",
      not_installed: "Not Installed",
      version: "Version",
      version_valid: "Version Valid (>=5.0.0)",
      system_files: "System Files Check",
      system_containers: "System Containers",
      database_containers: "Database Containers",
      needs_sync: "Needs Sync",
      synced: "Synced",
      close: "Close"
    },
    no_domains: "No domains",
    domain_management: {
      title: "Domain Status Management",
      add_new: "Add New Domain",
      current_domain_config: "Current Domain Configuration",
      domain_field: "Domain",
      port_field: "Port",
      host_field: "Host",
      domain_placeholder: "example.com",
      port_placeholder: "8080",
      host_placeholder: "localhost",
      add_button: "Add Domain",
      adding: "Adding...",
      remove_button: "Remove",
      configured: "Configured",
      not_configured: "Not Configured",
      no_domains_configured: "No domains configured",
      proxy_to: "Proxy to",
      auto_fill_port: "Auto-fill port from Quadlet file",
      domain_required: "Domain and port are required",
      invalid_domain: "Invalid domain format, please enter a valid domain (e.g.: example.com)",
      add_success: "Domain added successfully",
      add_failed: "Failed to add domain",
      remove_success: "Domain removed successfully",
      remove_failed: "Failed to remove domain",
      confirm_remove: "Are you sure you want to remove domain \"{domain}\"?",
      add_error: "Error occurred while adding domain",
      remove_error: "Error occurred while removing domain"
    },
    deployment_domain_management: {
      title: "Deployment Domain Management",
      add_new: "Add New Domain",
      current_config: "Current Domain Configuration",
      domain_field: "Domain",
      port_field: "Port",
      host_field: "Host Address",
      domain_placeholder: "example.com",
      port_placeholder: "8080",
      host_placeholder: "localhost",
      add_button: "Add Domain",
      adding: "Adding...",
      remove_button: "Remove",
      configured: "Configured",
      not_configured: "Not Configured",
      no_domains_configured: "No domains configured yet",
      proxy_to: "Proxy to",
      container_name: "Container Name",
      image: "Image",
      status: "Status",
      port_info: "Port",
      host_info: "Host",
      domain_required: "Domain and port are required",
      invalid_domain: "Invalid domain format",
      add_success: "Domain added successfully",
      add_failed: "Failed to add domain",
      remove_success: "Domain removed successfully",
      remove_failed: "Failed to remove domain",
      confirm_remove: "Are you sure you want to remove domain {domain}?",
      add_error: "Error occurred while adding domain",
      remove_error: "Error occurred while removing domain",
      view_logs: "View Deployment Logs",
      close: "Close"
    }
  },

  // System Monitor Page
  system_monitor: {
    title: "System Monitor",
    description: "Real-time system resource monitoring",
    memory: {
      title: "Memory Usage",
      total: "Total Memory",
      used: "Used",
      free: "Available",
      usage_percent: "Usage",
    },
    cpu: {
      title: "CPU Usage", 
      cores: "Cores",
      usage_percent: "Usage",
    },
    system_info: {
      title: "System Information",
      hostname: "Hostname",
      os: "Operating System",
      platform: "Platform",
      uptime: "Uptime",
      kernel_arch: "Kernel Architecture",
    },
    connection: {
      connecting: "Connecting...",
      connected: "Connected",
      disconnected: "Disconnected",
      reconnecting: "Reconnecting...",
    },
  },

  // Projects Management (new)
  projects: {
    title: "Project Management",
    description: "Manage projects, builds and deployments (static preview, mock data)",
    list_title: "Projects",
    empty_state: "No projects yet. Create your first project",
    table: {
      name: "Name",
      repo: "Repository",
      created: "Created",
      actions: "Actions",
      container: "Container",
      image: "Image",
      domains: "Domains",
      status: "Status",
      started: "Started",
      manage_domains: "Manage Domains",
      no_domains: "No domains"
    },
    actions: {
      create: "Create Project",
      refresh: "Refresh",
      details: "Details",
      build: "Build",
      deploy: "Deploy",
      view_logs: "View Logs"
    },
    sections: {
      builds: "Build History",
      deployments: "Deployment History",
      recent_deploys: "Recent Deployments"
    },
    form: {
      name: "Project Name",
      repo: "Repository URL",
      dockerfile: "Dockerfile Path",
      context: "Build Context",
      description: "Description",
      publish_port: "Publish Port",
      build_args: "Build Args (JSON)",
      rebuild_then_deploy: "Rebuild then deploy",
      image_name: "Image Name",
      quadlet: "Quadlet File",
      quadlet_placeholder: "Quadlet .container file content",
      env_file: "Env File",
      env_placeholder: "Environment variables content (.env)",
      domains: "Domains (comma separated)",
      // Declarative deployment fields
      environment: "Environment",
      environment_placeholder: "Select deployment environment",
      image_ref: "Image Reference",
      image_ref_placeholder: "e.g., localhost/myproject:latest",
      replicas: "Replicas",
      strategy: "Deployment Strategy",
      healthcheck: "Health Check",
      env_set_ref: "Environment Variable Set",
      secret_set_ref: "Secret Set",
      // Persistent storage fields
      persistent_storage: "Persistent Storage",
      volume_mounts: "Volume Mounts",
      add_mount: "Add Mount",
      host_path: "Host Path",
      host_path_placeholder: "e.g., my-blog/content",
      container_path: "Container Path",
      container_path_placeholder: "e.g., /var/lib/mysql",
      host_path_help: "This is the actual storage location on the server. Ensure the path is secure and on a backed-up partition. For multi-server high availability, use network filesystems like NFS. The platform will prefix with VOLUMES_BASE_PATH to restrict within sandbox.",
      remove_mount: "Remove Mount"
    },
    modals: {
      create_title: "Create Project",
      build_title: "Trigger Build",
      deploy_title: "Trigger Deploy",
      details_title: "Project Details",
      logs_title: "Deployment Logs"
    },
    messages: {
      create_success: "Project created",
      build_started: "Build started",
      deploy_started: "Deploy started",
      // Declarative deployment messages
      deploy_spec_success: "Declarative deployment submitted",
      deploy_spec_failed: "Declarative deployment failed",
      environment_required: "Please select deployment environment",
      image_ref_required: "Please enter image reference",
      invalid_port: "Port number must be between 1-65535",
      invalid_domains: "Invalid domain format",
      host_path_required: "Host path cannot be empty",
      container_path_required: "Container path cannot be empty",
      invalid_container_path: "Container path must be an absolute path",
      spec_build_failed: "Failed to build deployment spec"
    },
    logs: {
      connecting: "Connecting..."
    },
    empty_builds: "No builds yet.",
    empty_deployments: "No deployments yet."
  },

  // Environment Management
  environments: {
    title: "Environment Management",
    description: "Manage deployment environment configurations",
    loading: "Loading environments...",
    empty_state: "No environment configurations",
    select_environment: "Select Environment",
    create_first: "Please create an environment first",
    messages: {
      fetch_failed: "Failed to fetch environment list",
      load_failed: "Failed to load environment"
    }
  },


  // SSH Management
  ssh: {
    title: "SSH Management",
    description: "Manage remote SSH host connections",
    add_host: "Add Host",
    edit_host: "Edit Host",
    name: "Host Name",
    address: "Address",
    user: "Username",
    port: "Port",
    password: "Password",
    private_key: "Private Key",
    host_description: "Description",
    auth_method: "Auth Method",
    no_hosts: "No SSH hosts configured",
    connect: "Connect",
    terminal: "Terminal",
    confirm_delete: "Confirm Delete",
    delete_warning: "Are you sure you want to delete SSH host \"{name}\"? This action cannot be undone.",
    name_placeholder: "Enter host name",
    address_placeholder: "IP address or hostname",
    user_placeholder: "SSH username",
    password_placeholder: "SSH password (optional)",
    private_key_placeholder: "SSH private key content (optional)",
    description_placeholder: "Host description",
  },

  // Change Password Page
  change_password: {
    title: "Change Password",
    description: "Change your account password",
    current_password: "Current Password",
    new_password: "New Password",
    confirm_password: "Confirm New Password",
    current_password_placeholder: "Enter current password",
    new_password_placeholder: "Enter new password",
    confirm_password_placeholder: "Enter new password again",
    password_length_hint: "Password must be at least 6 characters",
    change_button: "Change Password",
    changing: "Changing...",
    success_message: "Password changed successfully",
    error_empty_fields: "Current password and new password cannot be empty",
    error_password_length: "New password must be at least 6 characters",
    error_password_mismatch: "New password confirmation does not match",
    error_change_failed: "Failed to change password, please try again",
  },

  // CLI Project Config Page
  cli_project_config: {
    title: "CLI Project Configuration",
    description: "Configure your project deployment parameters. This page will expire after form submission",
    time_left: "Time Left",
    expired: "Expired",
    session_expired: "Session Expired",
    session_expired_message: "This configuration page has expired. Please regenerate the configuration link.",
    config_submitted: "Configuration Submitted Successfully!",
    config_submitted_message: "Project configuration has been successfully submitted. You can now close this page.",
    auto_close_notice: "Page will close automatically in 3 seconds...",
    close_page: "Close Page",
    
    // TOML preview section
    toml_preview: "TOML Preview",
    
    // Configuration form
    project_config: "Project Configuration",
    basic_info: "Basic Information",
    project_name: "Project Name",
    project_name_required: "Project Name *",
    project_name_placeholder: "my-awesome-app",
    project_description: "Project Description",
    project_description_placeholder: "Project description...",
    port_number: "Port Number",
    
    // Domain configuration
    domain_config: "Domain Configuration",
    add_domain: "Add Domain",
    domain_placeholder: "example.com",
    add_button: "Add",
    remove_button: "Remove",
    
    // Environment variables
    env_variables: "Environment Variables",
    env_key_placeholder: "Variable name",
    env_value_placeholder: "Variable value",
    
    // Volume mounts
    persistent_storage: "Persistent Storage",
    add_mount: "Add Mount",
    host_path: "Host Path",
    container_path: "Container Path",
    host_path_placeholder: "/host/path",
    container_path_placeholder: "/container/path",
    
    // Form actions
    cancel: "Cancel",
    submit_config: "Submit Configuration",
    submitting: "Submitting...",
    
    // Error messages
    error_session_expired: "Session has expired, please regenerate the configuration link",
    error_project_name_required: "Please enter project name",
  },

  // CLI Device Authorization (new flow)
  cli_device_auth: {
    title: "Device Authorization Confirmation",
    subtitle: "You are authorizing a new device to login",
    confirm_info: "Please confirm that the following information matches the device from which you initiated the login:",
    device_system: "Device System",
    device_name: "Device Name", 
    ip_address: "IP Address",
    request_time: "Request Time",
    authorize_app: "Authorize Application",
    app_name: "OrbitCtl CLI Tool",
    confirm_button: "✅ It's me, confirm login",
    deny_button: "❌ Not me, deny",
    authorizing: "Authorizing...",
    success_title: "Authorization Successful!",
    success_message: "Device has been successfully authorized. You can now close this page.",
    auto_close_message: "Page will close automatically in 3 seconds...",
    cancel_close: "Cancel and Close",
    error_authorize_failed: "Device authorization failed",
    from_location: "from",
    error_missing_session: "Missing session ID parameter",
    error_get_device_info: "Failed to get device information",
  },
  providerAuth: {
    pageTitle: 'Third-Party Platform Authorization Management',
    pageDescription: 'Manage authorization information for platforms like GitHub, GitLab, Bitbucket, and Gitea for application code repository integration.',
    addAuth: 'Add Authorization',
    githubAppIntegration: 'GitHub Apps Integration',
    authList: 'Authorization List',
    loading: 'Loading...',
    noAuth: 'No Authorizations',
    noAuthDescription: 'Click the "Add Authorization" button to start configuring third-party platform authorizations.',
    loadFailed: 'Failed to load data: {{message}}',
    platform: 'Platform',
    clientIdOrUsername: 'Client ID / Username',
    associatedApp: 'Associated App',
    status: 'Status',
    creationTime: 'Creation Time',
    actions: 'Actions',
    notAssociated: 'Not Associated',
    enabled: 'Enabled',
    disabled: 'Disabled',
    edit: 'Edit',
    startInstallation: 'Start Installation',
    disable: 'Disable',
    enable: 'Enable',
    delete: 'Delete',
    deleteConfirm: 'Are you sure you want to delete this authorization?',
    createSuccess: 'Third-party platform authorization created successfully.',
    createFailed: 'Creation failed: {{message}}',
    updateSuccess: 'Authorization updated successfully.',
    updateFailed: 'Update failed: {{message}}',
    deleteSuccess: 'Authorization deleted successfully.',
    deleteFailed: 'Deletion failed: {{message}}',
    activateSuccess: 'Authorization activated successfully.',
    deactivateSuccess: 'Authorization deactivated successfully.',
    operationFailed: 'Operation failed: {{message}}',
    cannotGenerateInstallLink: 'Cannot generate installation link: Slug is missing or it is not a GitHub App.',
    githubAppIntegrationMessage: 'Please get the authorization code from the GitHub redirect URL to complete the integration.',
  },
  platform: {
    github: 'GitHub',
    gitlab: 'GitLab',
    bitbucket: 'Bitbucket',
    gitea: 'Gitea',
  },

  // Database Management
  database: {
    title: 'Database Management',
    list_title: 'Database List',
    create_database: 'Create Database',
    database_name: 'Database Name',
    database_type: 'Database Type',
    version: 'Version',
    status: 'Status',
    port: 'Port',
    internal_port: 'Internal Port',
    username: 'Username',
    password: 'Password',
    database_name_field: 'Database Name',
    data_path: 'Data Path',
    config_path: 'Config Path',
    is_remote: 'Remote Database',
    ssh_host: 'SSH Host',
    actions: 'Actions',
    deploy: 'Deploy',
    start: 'Start',
    stop: 'Stop',
    restart: 'Restart',
    connection_info: 'Connection Info',
    view_details: 'View Details',
    delete: 'Delete',
    redeploy: 'Redeploy',
    
    // Status
    status_pending: 'Pending',
    status_running: 'Running',
    status_stopped: 'Stopped',
    status_failed: 'Failed',
    
    // Database types
    type_postgresql: 'PostgreSQL',
    type_mysql: 'MySQL',
    type_mongodb: 'MongoDB',
    type_redis: 'Redis',
    
    // Forms
    create_title: 'Create New Database',
    edit_title: 'Edit Database',
    name_placeholder: 'Enter database name',
    version_placeholder: 'e.g., 16 or latest',
    port_placeholder: 'External port (e.g., 10001)',
    internal_port_placeholder: 'Internal port (PostgreSQL default: 5432)',
    username_placeholder: 'Database username',
    password_placeholder: 'Database password',
    database_name_placeholder: 'Default database name',
    data_path_placeholder: 'e.g., /var/lib/orbit-deploy/db-data',
    config_path_placeholder: 'Config file path (optional)',
    generate_password: 'Generate Password',
    save_and_deploy: 'Save and Deploy',
    save_only: 'Save Only',
    
    // Messages
    create_success: 'Database created successfully',
    create_failed: 'Failed to create database',
    update_success: 'Database updated successfully',
    update_failed: 'Failed to update database',
    delete_success: 'Database deleted successfully',
    delete_failed: 'Failed to delete database',
    delete_confirm: 'Are you sure you want to delete database "{{name}}"? This action cannot be undone.',
    deploy_success: 'Database deployment started',
    deploy_failed: 'Failed to deploy database',
    start_success: 'Database started successfully',
    start_failed: 'Failed to start database',
    stop_success: 'Database stopped successfully',
    stop_failed: 'Failed to stop database',
    restart_success: 'Database restarted successfully',
    restart_failed: 'Failed to restart database',
    
    // Connection info
    connection_info_title: 'Connection Information',
    host: 'Host',
    connection_string: 'Connection String',
    show_password: 'Show Password',
    hide_password: 'Hide Password',
    copy_connection_string: 'Copy Connection String',
    copied: 'Copied',
    
    // Empty state
    empty_state: 'No databases',
    empty_state_desc: 'Click the button above to create your first database',
    
    // Shell access
    shell_access: 'Shell Access',
    open_shell: 'Open Shell',
    shell_description: 'Execute commands directly in the database container',
  },

  // System Settings Page
  system_settings: {
    title: "System Settings",
    description: "Manage system-wide settings",
    domain: "System Domain",
    domain_placeholder: "Enter the domain for the system",
    save_button: "Save",
    saving: "Saving...",
    success_message: "System settings updated successfully",
    error_update_failed: "Failed to update system settings",
    error_empty_domain: "Domain cannot be empty",
    environment_check: "Environment Check",
    environment_check_description: "Check the deployment environment for required dependencies.",
    run_check: "Run Check",
  },

  // Create Deployment Modal
  create_deployment_modal: {
    title: "New Deployment",
    app: "Application",
    description: "Description",
    rebuild_option: "Rebuild version",
    select_release_label: "Select a release *",
    loading_releases: "Loading releases...",
    info_rebuild_selected: "You have selected to build a new version.",
    warn_no_releases: "No available releases. You can choose to rebuild the version.",
    select_placeholder: "Please select a release",
    status_label: "Status",
    creating_button: "Creating...",
    create_button: "Create Deployment",
    cancel_button: "Cancel",
    success_toast: "Deployment created successfully",
    error_toast_prefix: "Failed to create deployment:",
    error_no_release_selected: "Please select a release",
  },

  // Logs Modal
  logs_modal: {
    title: "Deployment Logs",
    loading: "Loading logs...",
  },

  // Domain Tab
  domain_tab: {
    title: "Domain Management",
    add_domain_button: "Add Domain",
    load_error_prefix: "Failed to load domains:",
    unknown_error: "Unknown error",
    table_header_domain: "Domain",
    table_header_port: "Port",
    table_header_status: "Status",
    table_header_created: "Created At",
    table_header_actions: "Actions",
    open_domain_title: "Open {{domainName}}",
    status_active: "Active",
    status_inactive: "Inactive",
    no_domains_message: "No domains configured yet. Click the \"Add Domain\" button above to get started.",
    modal_title_edit: "Edit Domain",
    modal_title_add: "Add Domain",
    form_label_domain: "Domain",
    form_placeholder_domain: "e.g., example.com",
    form_label_port: "Port",
    form_placeholder_port: "e.g., 8080",
    form_label_enable: "Enable Domain",
    saving_button: "Saving...",
    update_button: "Update",
    add_button: "Add",
    add_success_toast: "Domain added successfully",
    add_error_toast: "Failed to add domain",
    update_success_toast: "Domain updated successfully",
    update_error_toast: "Failed to update domain",
    delete_success_toast: "Domain deleted successfully",
    delete_error_toast: "Failed to delete domain",
    error_domain_required: "Domain name cannot be empty",
    error_invalid_port: "Port must be a number between 1-65535",
    delete_confirm: "Are you sure you want to delete the domain \"{{domainName}}\"",
  },

  // Application List
  application_list: {
    title: "Application List",
    add_new_button: "Add New Application",
    empty_state_title: "No applications yet",
    empty_state_description: "Click \"Add New Application\" to create the first one",
    table_header_name: "Application Name",
    table_header_description: "Description",
    table_header_repo: "Repository URL",
    table_header_port: "Target Port",
    table_header_status: "Status",
    table_header_created: "Created At",
    status_running: "Running",
    status_stopped: "Stopped",
    status_unknown: "Unknown",
    load_error_prefix: "Failed to load application list:",
  },

  // Deployment Logs Modal
  deployment_logs_modal: {
    title: "Deployment Logs",
    status_connected: "● Live",
    status_error: "● Connection Error",
    tooltip_reconnect: "Reconnect",
    tooltip_clear: "Clear Logs",
    tooltip_copy: "Copy Logs",
    tooltip_download: "Download Logs",
    loading_older: "Loading older logs...",
    no_logs: "No log content",
    footer_image: "Image:",
    footer_unknown: "Unknown",
    footer_log_count: "{{count}} log entries",
    load_initial_error: "Failed to load initial logs:",
    load_error_prefix: "Failed to load logs:",
    load_older_error: "Failed to load older logs:",
    connect_error_prefix: "Connection failed:",
    copy_error: "Failed to copy logs:",
  },
}

